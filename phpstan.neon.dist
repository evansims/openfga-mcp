includes:
    - vendor/phpstan/phpstan-strict-rules/rules.neon

parameters:
    level: max
    treatPhpDocTypesAsCertain: false
    inferPrivatePropertyTypeFromConstructor: true

    # Enhanced strict analysis
    checkMissingCallableSignature: true
    checkUninitializedProperties: true
    polluteScopeWithLoopInitialAssignments: false
    polluteScopeWithAlwaysIterableForeach: false

    # Modern PHP best practices
    checkExplicitMixedMissingReturn: true
    checkFunctionNameCase: true
    checkInternalClassCaseSensitivity: true
    checkTooWideReturnTypesInProtectedAndPublicMethods: true

    # Readonly properties support (PHP 8.1+)
    checkDynamicProperties: true

    ignoreErrors:
        # Dynamic method calls are expected for proxy pattern
        - '#Variable method call on OpenFGA\\ClientInterface#'
        - '#Variable method call on OpenFGA\\Laravel\\OpenFgaManager#'
        - '#Variable method call on \$this\(OpenFGA\\Laravel\\Testing\\MockScenarios\)#'
        - '#Variable property access on OpenFGA\\Laravel\\OpenFgaManager#'
        # PSR discovery - PHPStan can't determine runtime class checks
        - '#Call to function method_exists\(\) with .* will always evaluate to false#'
        # Trait is provided for users to apply to their models
        - '#Trait OpenFGA\\Laravel\\Traits\\HasAuthorization is used zero times and is not analysed#'
        # Debugbar is an optional dependency (file is excluded below)
        # Testing traits are provided for users to apply in their test classes
        - '#Trait OpenFGA\\Laravel\\Testing\\IntegrationTestHelpers is used zero times and is not analysed#'
        - '#Trait OpenFGA\\Laravel\\Testing\\MeasuresPerformance is used zero times and is not analysed#'
        - '#Trait OpenFGA\\Laravel\\Testing\\SnapshotsTesting is used zero times and is not analysed#'
        - '#Trait OpenFGA\\Laravel\\Testing\\UsesMockScenarios is used zero times and is not analysed#'
        # Spatie compatibility trait is provided for users
        - '#Trait OpenFGA\\Laravel\\Traits\\SpatieCompatible is used zero times and is not analysed#'
        # Laravel HTTP Client Factory uses magic methods
        - '#Dynamic call to static method Illuminate\\Http\\Client\\PendingRequest::withHeaders\(\)#'
        # Psalm requires isset() checks that PHPStan considers redundant for preg_match results
        - 
            message: '#Offset \d+ on array\{.+\} in isset\(\) always exists and is not nullable#'
            path: src/Console/Commands/ModelValidateCommand.php
        # PHPDoc type annotations for Psalm compatibility
        - 
            message: '#PHPDoc tag @var with type .+ is not subtype of native type#'
            path: src/Console/Commands/ModelValidateCommand.php
        # ConfigValidator array access is safely guarded by array_key_exists checks
        -
            message: '#Cannot access an offset on mixed#'
            path: src/Support/ConfigValidator.php

    paths:
        - src
    
    excludePaths:
        - src/Debugbar/OpenFgaCollector.php
