runtime: "container"

build:
  dockerfile: "Dockerfile"
  dockerBuildPath: "."

startCommand:
  type: "http"
  port: 9090
  configSchema:
    type: "object"
    properties:
      openfgaUrl:
        type: "string"
        description: "OpenFGA server URL (e.g., http://localhost:8080). Leave empty for offline mode (planning & coding only)"
      apiToken:
        type: "string"
        description: "API token for OpenFGA authentication (optional)"
      clientId:
        type: "string"
        description: "Client ID for OAuth2 authentication (optional)"
      clientSecret:
        type: "string"
        description: "Client secret for OAuth2 authentication (optional)"
      issuer:
        type: "string"
        description: "Token issuer for OAuth2 (optional)"
      audience:
        type: "string"
        description: "API audience for OAuth2 (optional)"
      enableWrite:
        type: "boolean"
        description: "Enable write operations (create, update, delete). Disabled by default for safety"
      defaultStore:
        type: "string"
        description: "Default OpenFGA store ID to use"
      defaultModel:
        type: "string"
        description: "Default authorization model ID to use"
      restrictToDefault:
        type: "boolean"
        description: "Restrict operations to the configured default store/model only"
      debugLogging:
        type: "boolean"
        description: "Enable debug logging for troubleshooting"
    required: []
  exampleConfig:

env:
  OPENFGA_MCP_TRANSPORT: "http"
  OPENFGA_MCP_API_URL: "${openfgaUrl}"
  OPENFGA_MCP_API_TOKEN: "${apiToken}"
  OPENFGA_MCP_API_CLIENT_ID: "${clientId}"
  OPENFGA_MCP_API_CLIENT_SECRET: "${clientSecret}"
  OPENFGA_MCP_API_ISSUER: "${issuer}"
  OPENFGA_MCP_API_AUDIENCE: "${audience}"
  OPENFGA_MCP_API_WRITEABLE: "${enableWrite}"
  OPENFGA_MCP_API_STORE: "${defaultStore}"
  OPENFGA_MCP_API_MODEL: "${defaultModel}"
  OPENFGA_MCP_API_RESTRICT: "${restrictToDefault}"
  OPENFGA_MCP_DEBUG: "${debugLogging}"
